type User {
  id: String! @id
  username: String!
  displayName: String
  avatarImg: String
  posts: [Post!]
  comments: [Comment!]
}

type Post
  @withSubscription
  @auth(
    add: {
      rule: """
      query ($ID: String!) {
        queryPost {
          author(filter: { id: { eq: $ID } }) {
            id
          }
        }
      }
      """
    }
  ) {
  id: ID!
  title: String! @search(by: [term])
  text: String! @search(by: [fulltext])
  datePublished: DateTime
  author: User! @hasInverse(field: posts)
  category: Category! @hasInverse(field: posts)
  comments: [Comment!]
}

type Comment {
  id: ID!
  text: String!
  commentsOn: Post! @hasInverse(field: comments)
  author: User! @hasInverse(field: comments)
}

type Category {
  id: ID!
  name: String! @search(by: [term])
  posts: [Post!]
}

# Dgraph.Authorization {"JWKUrl":"https://www.googleapis.com/service_accounts/v1/jwk/securetoken@system.gserviceaccount.com", "Namespace": "https://learning-dgraph-with-react.web.app/", "Audience": ["learning-dgraph-with-react"], "Header": "authorization"}
